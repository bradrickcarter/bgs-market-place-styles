// Sass function to access spacing values from our tokens/spacing file easier.
// 
// Should be used as spacing(key) where the key is the spacing's key
// 
// Use example:
// .class {
//    margin-top: spacing(2);
// }
@function spacing($size) {
  @return map-get($spacing, $size);
}

// Auto generate classes 
// 
// All spacing utilities provide a shorthand convention for setting which side(s)
// the space should apply to.
// 
// Short	| Description
// t      |	Top
// r      | Right
// b      | Bottom
// l      | Left
// x      | X-Axis (left and right)
// y      | Y-Axis (top and bottom)
// n      | Negative
// m      | Margin
// p      | Padding
// 
// So for example, .pl2 would be padding left 2 units of spacing
@each $size, $value in $spacing {
  // Padding
  .p#{$size} { padding: $value !important; }
  .pt#{$size} { padding-top: $value !important; }
  .pr#{$size} { padding-right: $value !important; }
  .pb#{$size} { padding-bottom: $value !important; }
  .pl#{$size} { padding-left: $value !important; }
  .px#{$size} { padding-right: $value !important; padding-left: $value !important; }
  .py#{$size} { padding-top: $value !important; padding-bottom: $value !important; }

  // Margin
  .m#{$size} { margin: $value !important; }
  .mt#{$size} { margin-top: $value !important; }
  .mr#{$size} { margin-right: $value !important; }
  .mb#{$size} { margin-bottom: $value !important; }
  .ml#{$size} { margin-left: $value !important; }
  .mx#{$size} { margin-right: $value !important; margin-left: $value !important; }
  .my#{$size} { margin-top: $value !important; margin-bottom: $value !important; }

  // Negative Margin
  .mn#{$size} { margin: $value * -1 !important; }
  .mtn#{$size} { margin-top: $value * -1 !important; }
  .mrn#{$size} { margin-right: $value * -1 !important; }
  .mbn#{$size} { margin-bottom: $value * -1 !important; }
  .mln#{$size} { margin-left: $value * -1 !important; }
  .mxn#{$size} { margin-left: $value * -1 !important; margin-right: $value * -1 !important; }
  .myn#{$size} { margin-top: $value * -1 !important; margin-bottom: $value * -1 !important; }
}

.ml-auto { margin-left: auto; }
.mr-auto { margin-right: auto; }
.mx-auto { margin-left: auto; margin-right: auto; }

// Width/Height Utilities
@each $size, $value in $spacing {
  .width-#{$size} { width: $value !important; }
  .height-#{$size} { height: $value !important; }
}
